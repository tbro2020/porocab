"""
Django settings for poro project.

Generated by 'django-admin startproject' using Django 4.2.7.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""

import os
import dj_database_url
from pathlib import Path
from dotenv import load_dotenv



# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent
load_dotenv()


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-!b7pgw_drg7zjvn05toj7qe(t#2l6a#fuo*lxm)%=oj)a^v%4k'
SECRET_KEY = os.getenv('SECRET_KEY', SECRET_KEY)

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = int(os.getenv('DEBUG', 1))

ALLOWED_HOSTS = ['*']
CSRF_TRUSTED_ORIGINS = ['https://poro.kaditaj.com']

#ALLOWED_HOSTS = list(os.getenv('ALLOWED_HOSTS', '*').split(','))



# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django.contrib.humanize',
    'django.contrib.gis',

    'dal',
    'dal_select2',

    'tinymce',
    'mathfilters',
    'crispy_forms',
    'widget_tweaks',
    'django_filters',
    'rest_framework',
    'rest_framework.authtoken',
    'crispy_bootstrap5',
    'django_json_widget',

    'djmoney',
    'qr_code',
    'django_ace',
    'notifications',
    'phonenumber_field',

    'api',
    'core',
    'service'
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'django_currentuser.middleware.ThreadLocalUserMiddleware',
    'whitenoise.middleware.WhiteNoiseMiddleware',
]

ROOT_URLCONF = 'poro.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': ['template'],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'core.context.base'
            ],
        },
    },
]

WSGI_APPLICATION = 'poro.wsgi.application'
ASGI_APPLICATION = 'poro.asgi.application'


# Database
# https://docs.djangoproject.com/en/5.0/ref/settings/#databases

DATABASES = {'default': None}
DATABASE_URL = 'spatialite:///db.sqlite3'
TEST = {'NAME': DATABASE_URL}
DATABASE_URL = os.getenv('DATABASE_URL', default=DATABASE_URL)
DATABASES['default'] = dj_database_url.parse(DATABASE_URL)

print(DATABASE_URL)
CONN_MAX_AGE = int(os.getenv('CONN_MAX_AGE', 0))
DATABASES['default']['CONN_MAX_AGE'] = CONN_MAX_AGE
DATABASES['default']['TEST'] = TEST

# Redis settings
REDIS_URL = os.getenv('REDIS_URL', 'redis://localhost:6379')
REDIS_HOST = os.getenv('REDIS_HOST', 'localhost')
REDIS_PORT = os.getenv('REDIS_PORT', 6379)

print(REDIS_URL)

# Cache settings default memory and redis cache
CACHES = {
    "default": {
        "BACKEND": "django.core.cache.backends.redis.RedisCache",
        "LOCATION": REDIS_URL,
    }
}

# Default user model and authentication
LOGIN_URL = os.getenv("LOGIN_URL", 'login')
AUTH_USER_MODEL = os.getenv("AUTH_USER_MODEL", 'core.user')
LOGOUT_REDIRECT_URL = os.getenv("LOGOUT_REDIRECT_URL", 'login')
LOGIN_REDIRECT_URL = os.getenv("LOGIN_REDIRECT_URL", 'core:home')


# Password validation
# https://docs.djangoproject.com/en/5.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.0/topics/i18n/

LANGUAGE_CODE = "fr"

TIME_ZONE = "UTC"

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.0/howto/static-files/

STATIC_URL = 'static/'
STATIC_URL = os.getenv("STATIC_URL", STATIC_URL)
# STATICFILES_DIRS =[os.path.join(BASE_DIR, 'static')]
STATIC_ROOT = os.getenv("STATIC_ROOT", STATIC_URL.replace('/', ''))

AWS_LOCATION = os.getenv('AWS_LOCATION', default='')
AWS_DEFAULT_ACL = os.getenv('AWS_DEFAULT_ACL', default='public-read')
AWS_QUERYSTRING_AUTH= os.getenv('AWS_QUERYSTRING_AUTH', default=False)

AWS_S3_REGION = os.getenv('AWS_S3_REGION')
AWS_ACCESS_KEY_ID = os.getenv('AWS_ACCESS_KEY_ID')
AWS_S3_ENDPOINT_URL = os.getenv('AWS_S3_ENDPOINT_URL')
AWS_S3_CUSTOM_DOMAIN = os.getenv('AWS_S3_CUSTOM_DOMAIN')
AWS_SECRET_ACCESS_KEY = os.getenv('AWS_SECRET_ACCESS_KEY')
AWS_S3_OBJECT_PARAMETERS = {'CacheControl': 'max-age=86400'}
AWS_STORAGE_BUCKET_NAME = os.getenv('AWS_STORAGE_BUCKET_NAME')

DEFAULT_FILE_STORAGE = 'django.core.files.storage.FileSystemStorage'
DEFAULT_FILE_STORAGE = os.getenv('DEFAULT_FILE_STORAGE', default=DEFAULT_FILE_STORAGE)

STATICFILES_STORAGE = "whitenoise.storage.CompressedManifestStaticFilesStorage"
STATICFILES_STORAGE = os.getenv("STATICFILES_STORAGE", STATICFILES_STORAGE)

MEDIA_ROOT = BASE_DIR / 'media'
MEDIA_URL = os.getenv("MEDIA_URL", 'media/')
PUBLIC_MEDIA_LOCATION = os.getenv('PUBLIC_MEDIA_LOCATION', default='media')

AWS_S3_SECURE_URLS = False
AWS_S3_URL_PROTOCOL = 'http:'

# Default primary key field type
# https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"

# Email settings
EMAIL_BACKEND = os.getenv('EMAIL_BACKEND', 'django.core.mail.backends.console.EmailBackend')
EMAIL_HOST_PASSWORD = os.getenv('EMAIL_HOST_PASSWORD', '')
EMAIL_HOST_USER = os.getenv('EMAIL_HOST_USER', '')
EMAIL_USE_TLS = bool(int(os.getenv('EMAIL_USE_TLS', 0)))
EMAIL_USE_SSL = bool(int(os.getenv('EMAIL_USE_SSL', 0)))
EMAIL_HOST = os.getenv('EMAIL_HOST', 'localhost')
EMAIL_PORT = os.getenv('EMAIL_PORT', 1025)

# Django Rest Framework settings
REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': (
        'rest_framework.authentication.SessionAuthentication',
        'rest_framework.authentication.BasicAuthentication',
    ),
    'DEFAULT_PERMISSION_CLASSES': (
        'rest_framework.permissions.IsAuthenticated',
    ),
}

# Django Crispy Forms settings
CRISPY_TEMPLATE_PACK = 'bootstrap5'
CRISPY_ALLOWED_TEMPLATE_PACKS = ['bootstrap', 'bootstrap5', 'uni_form']

# Django JSON Widget settings
JSON_WIDGET_CSS = 'https://cdnjs.cloudflare.com/ajax/libs/jsoneditor/9.0.0/jsoneditor.min.css'
JSON_WIDGET_JS = 'https://cdnjs.cloudflare.com/ajax/libs/jsoneditor/9.0.0/jsoneditor.min.js'

# Django Money settings
DEFAULT_CURRENCY = 'CDF'
CURRENCIES = ('USD', 'CDF')
CURRENCY_CHOICES = [(currency, currency) for currency in CURRENCIES]

# Django QR Code settings
QR_CODE_FOREGROUND = 'black'
QR_CODE_BACKGROUND = 'white'
QR_CODE_MODULE_SIZE = 5
QR_CODE_VERSION = 1
QR_CODE_ERROR_CORRECTION = 'L'
QR_CODE_IMAGE_FORMAT = 'PNG'
QR_CODE_CACHE_TIMEOUT = 3600
QR_CODE_CACHE_PREFIX = 'qr_code'

# Django Ace settings
ACE_DEFAULT_THEME = 'chrome'
ACE_DEFAULT_MODE = 'python'
ACE_DEFAULT_WIDTH = '100%'
ACE_DEFAULT_HEIGHT = '300px'

# Django Phonenumber Field settings
PHONENUMBER_DB_FORMAT = 'E164'
PHONENUMBER_DEFAULT_REGION = 'CD'

# Django TinyMCE settings
TINYMCE_DEFAULT_CONFIG = {
    'cleanup_on_startup': True,
    'custom_undo_redo_levels': 20,
    'theme': 'silver',
    'height': '600',
    'plugins': '''
            textcolor save link image media preview codesample contextmenu
            table code lists fullscreen  insertdatetime  nonbreaking
            contextmenu directionality searchreplace wordcount visualblocks
            visualchars code fullscreen autolink lists  charmap print  hr
            anchor pagebreak
            ''',
    'toolbar1': '''
            fullscreen preview bold italic underline | fontselect,
            fontsizeselect  | forecolor backcolor | alignleft alignright |
            aligncenter alignjustify | indent outdent | bullist numlist table |
            | link image media | codesample |
            ''',
    'toolbar2': '''
            visualblocks visualchars |
            charmap hr pagebreak nonbreaking anchor |  code |
            ''',
    'contextmenu': 'formats | link image',
    'menubar': True,
    'statusbar': True
}

# Django Select2 settings
SELECT2_JS = 'https://cdnjs.cloudflare.com/ajax/libs/select2/4.0.13/js/select2.min.js'
SELECT2_CSS = 'https://cdnjs.cloudflare.com/ajax/libs/select2/4.0.13/css/select2.min.css'
SELECT2_I18N = 'https://cdnjs.cloudflare.com/ajax/libs/select2/4.0.13/js/i18n/fr.js'

# Django Math Filters settings
MATHJAX = {
    'url': 'https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.9/MathJax.js',
    'config': 'TeX-AMS_HTML',
    'TeX': {'extensions': ['AMSmath.js', 'AMSsymbols.js']},
}

# Django Filters settings
FILTERS_HELP_TEXT_FILTER = False
FILTERS_HELP_TEXT_EXCLUDE = False

# Django Debug Toolbar settings
INTERNAL_IPS = [
    'localhost',
]

# Django Celery settings
CELERY_RESULT_EXTENDED = True
CELERY_CACHE_BACKEND='django-cache'
CELERY_BROKER_CONNECTION_RETRY_ON_STARTUP = True
CELERY_BROKER_URL = os.getenv('CELERY_BROKER_URL', REDIS_URL)
CELERY_RESULT_BACKEND = os.getenv('CELERY_RESULT_BACKEND', REDIS_URL)
CELERY_BROKER_TRANSPORT_URL=os.getenv('CELERY_BROKER_TRANSPORT_URL', REDIS_URL)


# Sentry settings
SENTRY_DSN = "https://61630e2ac1f3c024ffa6a3d4a7207f57@o4505861077204992.ingest.us.sentry.io/4507582424612864"
SENTRY_DSN = os.getenv("SENTRY_DSN", SENTRY_DSN)

import sentry_sdk
sentry_sdk.init(
    dsn=SENTRY_DSN,
    traces_sample_rate=1.0,
    profiles_sample_rate=1.0,
)

# cors header
CORS_ALLOW_ALL_ORIGINS = True

# Twilio
TWILIO_ACCOUNT_SID = "ACc431c38e47547dcde29a80c137d01d49"
TWILIO_ACCOUNT_SID = os.getenv("TWILIO_ACCOUNT_SID", TWILIO_ACCOUNT_SID)

TWILIO_AUTH_TOKEN = "9cebe9ef8fbff9f59f2e9508cf91d77a"
TWILIO_AUTH_TOKEN = os.getenv("TWILIO_AUTH_TOKEN", TWILIO_AUTH_TOKEN)

TWILIO_NUMBER = '+18454425618'
TWILIO_AUTH_TOKEN = os.getenv("TWILIO_NUMBER", TWILIO_NUMBER)

# Django money settings
DEFAULT_CURRENCY = 'CDF'

CURRENCY_CHOICES = [
    ('USD', 'USD'),
    ('CDF', 'CDF'),
]

# Ride settings
PRICE_PER_MINUTE = 350
PRICE_PER_MINUTE = int(os.getenv('PRICE_PER_MINUTE', PRICE_PER_MINUTE))

# Pusher
PUSHER_APP_ID = "1859491"
PUSHER_APP_ID = os.getenv("PUSHER_APP_ID", PUSHER_APP_ID)

PUSHER_KEY = "9138802923b81e76c23e"
PUSHER_KEY = os.getenv("PUSHER_KEY", PUSHER_KEY)

PUSHER_SECRET = "da2991514e6fc789d89f"
PUSHER_KEY = os.getenv("PUSHER_KEY", PUSHER_KEY)

PUSHER_CLUSTER = "eu"
PUSHER_CLUSTER = os.getenv("PUSHER_CLUSTER", PUSHER_CLUSTER)

# Google maps
GOOGLE_MAPS_KEY = "AIzaSyDrFA2bJ9smy10MklhW33q4r7Tn8AMCKk8"
GOOGLE_MAPS_KEY = os.getenv("GOOGLE_MAPS_KEY", GOOGLE_MAPS_KEY)